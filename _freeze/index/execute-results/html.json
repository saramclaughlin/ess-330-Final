{
  "hash": "84f1adfe31bf9e4e2d888cd65249e3af",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: ESS 330 Final Project\nauthors:\n  - name: Sara McLaughlin\n    affiliation: Colorado State University\n    roles: writing\n    corresponding: true\n    \n  - name: Stephanie Farmer\n    affiliation: Colorado State University\n    roles: writing\n    \n  - name: Kiara Gleiser Gherson\n    affiliation: Colorado State University\n    roles: writing\n    \nbibliography: references.bib\ncsl: apa.csl\n---\n\n\n\n\n# 1. Title:\nThe Effects of Sea Level Rise on Freshwater Quality Within the State of Florida from 2010 - 2024  \n\n# 2. Introduction:\nSea Level rise has had significant impacts on water quality. As the sea level increases, saltwater intrusion can contaminate freshwater aquifers which reduce the availability of clean drinking water [@werner2009]. The intrusion of saltwater also degrades wetlands, which act as a natural water filter and are habitats for diverse aquatic species. The decrease in wetlands diminishes their ability to buffer against storm surges and filter pollutants, further compromising the water quality [@dessu2018]. Also, rising sea levels lead to more frequent and severe coastal flooding which can result in an overflow of sewage systems and carry pollutants into waterways. This increase in contamination can endanger public health and harm aquatic ecosystems. Understanding and addressing the effects of sea level rise on water quality is significant for protecting freshwater resources, preserving ecosystems, and ensuring the sustainability of coastal communities. Our hypothesis to address this research project is: If sea level rise has increased from 2010 to 2024 in the state of Florida, then the salinity levels in freshwater sources will also have increased, degrading overall freshwater quality. This will require two data sets: (1) sea level rise data from NOAA’s Tides and Current database and (2) freshwater quality (specifically, salinity) data from the USGS National Water Information System. From this data, we will construct a Spearman Correlation Test to determine correlation, a time series to determine trends in the relationship across time, and a faceted scatter plot to visualize the trends more clearly.\n\n# 3. Data: \nThe data used in this project cover 2 environmental variables that were measured between 2010 and 2024 across Florida. The data we are using for this project come from 2 main sources: the salinity measurements from USGS and the sea level trends from NOAA. The first comes from water quality data available in the USGS website for salinity of water between 2010 and 2024 from four different gauges near Vaca Key, Florida. The salinity data were downloaded from the USGS database. The sea level data comes from NOAA, specifically from the Vaca Key station. The first variable is sea level (in meters), which shows the trend in sea level rise throughout the years. The second is salinity (ppth), which shows fluctuations of salinity of the area in this time frame. Salinity data are presented in the form of a time series that varies over time, while the data on sea level show an increasing trend. Sites and gauges were selected based on the nearest distance in km. Four gauges from the USGS water quality data set were selected to be paired with the Vaca Key site from the NOAA sea level rise data set. We will need to clean the sea level rise data by altering the format of the CSV (code given by Prof. Johnson), select for only columns needed in the salinity data, and properly formatting the date columns in both data sets.\n\n# Sea level rise visual\n## The sea level in Vaca Key shows an increasing trend from 2010 through 2024. This trend is highlighted in the following image, which also shows a regression line and the monthly fluctuations on sea level average of Vaca Key, Florida.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(purrr)\nlibrary(tsibble)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'tsibble':\n  method               from \n  as_tibble.grouped_df dplyr\n\nAttaching package: 'tsibble'\n\nThe following object is masked from 'package:lubridate':\n\n    interval\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(fable)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: fabletools\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(modeltime)\nlibrary(timetk)\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n✔ broom        1.0.7     ✔ rsample      1.2.1\n✔ dials        1.3.0     ✔ tune         1.2.1\n✔ infer        1.0.7     ✔ workflows    1.1.4\n✔ modeldata    1.4.0     ✔ workflowsets 1.1.0\n✔ parsnip      1.2.1     ✔ yardstick    1.3.1\n✔ recipes      1.1.0     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ yardstick::accuracy() masks fabletools::accuracy()\n✖ scales::discard()     masks purrr::discard()\n✖ dplyr::filter()       masks stats::filter()\n✖ recipes::fixed()      masks stringr::fixed()\n✖ infer::generate()     masks fabletools::generate()\n✖ infer::hypothesize()  masks fabletools::hypothesize()\n✖ dplyr::lag()          masks stats::lag()\n✖ parsnip::null_model() masks fabletools::null_model()\n✖ yardstick::spec()     masks readr::spec()\n✖ recipes::step()       masks stats::step()\n• Use tidymodels_prefer() to resolve common conflicts.\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(parsnip)\n\nslr_data <- read_csv(\"8723970_VacaKey.csv\", skip = 4, \n                     col_names = c(\"Year\", \"Month\", \"Monthly_MSL\", \"Linear_Trend\", \"High_Conf\", \"Low_Conf\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 612 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): Year, Month, Monthly_MSL, Linear_Trend, High_Conf, Low_Conf\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nslr_data <- slr_data %>%\n  filter(!is.na(Year)) %>%\n  mutate(\n    Monthly_MSL = as.numeric(Monthly_MSL),\n    date = make_date(Year, Month, 1)\n  ) %>%\n  filter(date >= as.Date(\"2010-01-01\") & date <= as.Date(\"2024-12-31\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There were 3 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `Monthly_MSL = as.numeric(Monthly_MSL)`.\nCaused by warning:\n! NAs introduced by coercion\nℹ Run `dplyr::last_dplyr_warnings()` to see the 2 remaining warnings.\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot(slr_data, aes(x = date, y = Monthly_MSL)) +\n  geom_line(color = \"#1F77B4\", alpha = 0.5) +\n  geom_smooth(method = \"lm\", color = \"#D62728\", se = FALSE, size = 1.2) +\n  scale_y_continuous(\n    limits = c(0, 0.30),\n    breaks = seq(0, 0.30, by = 0.05),\n    labels = scales::number_format(accuracy = 0.01)\n  ) +\n  labs(\n    title = \"Sea Level Trend at Vaca Key (2010–2024)\",\n    x = \"Date\",\n    y = \"Monthly Mean Sea Level (meters)\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 8)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 3 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n\n\n# Salinity levels visual\n## Salinity in Miami-Dade county, Florida shows fluctuations throughout the time frame used, with noticeable increases in certain periods of time. This trend can be seen in the following image, which shows how salinity levels have changed between 2010 and 2024.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsalinity_data_visual <- read.csv(\"salinity.csv\")\n\nsalinity_data_visual <- salinity_data_visual %>%\n  mutate(Activity_StartDate = as.Date(Activity_StartDate)) %>%\n  filter(Activity_StartDate >= as.Date(\"2010-01-01\") & Activity_StartDate <= as.Date(\"2024-12-31\"),\n         Location_Identifier == \"USGS-251241080385301\")\n\nggplot(salinity_data_visual, aes(x = Activity_StartDate, y = Result_Measure)) +\n  geom_line(color = \"steelblue\", size = 0.5) +\n  labs(title = \"Salinity at Guage USGS-251241080385301 (ppth, 2010–2024)\",\n       x = \"Date\",\n       y = \"Salinity (ppth)\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\n\n# 4. Methods: \nPrior to conducting any analysis, we had to determine which gauges to extract from the list of Florida gauges in the USGS water quality and NOAA sea level data bases. We first chose one sea level rise gauge to use (based on proximity to other USGS gauges) and then selected the four nearest USGS gauges by distance in km, according to latitude and longitudes provided in the dataset. To answer our research question for this project, we conducted a spearman correlation test, time series with forecasting, and ggplot. First, we cleaned the sea level rise data by removing the metadata from the file and adding a column for gauge ID. We then cleaned the salinity data by selecting for only the necessary columns for analysis: columns denoting location, date of collection, descriptions of results, and result measurements. We also ensured both sea level and salinity data sets only included dates from 2010-2024, as this is the range of years we narrowed in on for analysis. Once this was complete, we began the analysis. We first conducted a time series in R studio highlighting trends in salinity over time. Next, we used a prophet model to show forecasted trends in salinity over the next five years (2025 - 2029). We then visualized the trends in salinity and sea level rise by employing a faceted ggplot showing both salinity at each gauge and sea level rise across the 14 years we analyzed. Finally, we employed spearman correlation tests at each gauge to test for significance in the relationships between sea level rise and freshwater salinity in Florida.  \n\n#5. Analysis \nCleaning sea level rise data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nf <- c(\"8723970_VacaKey.csv\")\nSLR_data <- map(f, function(i) {\n  readr::read_csv(i, skip = 5, show_col_types = FALSE) |> \n    dplyr::mutate(id = gsub(\".csv\", \"\", basename(i)))\n}) |> \n  bind_rows()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n```{.r .cell-code}\nsalinity_data <- read_csv(\"salinity.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 329 Columns: 181\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (45): Org_Identifier, Org_FormalName, Project_Identifier, Location_Ide...\ndbl    (7): Location_Latitude, Location_Longitude, Location_LatitudeStandard...\nlgl  (123): Project_Name, Project_QAPPApproved, Project_QAPPApprovalAgency, ...\ndttm   (1): Location_HUCEightDigitCode\ndate   (3): Activity_StartDate, Activity_EndDate, LastChangeDate\ntime   (2): Activity_StartTime, Activity_EndTime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ncleaned_salinity_data <- salinity_data %>%\n   select(\n    Location_Identifier,\n    Location_Type,\n    Location_State,\n    Location_CountryName,\n    Location_CountyName,\n    Location_Latitude,\n    Location_Longitude,\n    Activity_Media,\n    Activity_MediaSubdivision,\n    Activity_StartDate,\n    Result_Characteristic,\n    Result_CharacteristicUserSupplied,\n    Result_Measure,\n    Result_MeasureUnit\n  )\n```\n:::\n\n\n\n\n\nTime Series Analysis\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsalinity_yearly_ts <- cleaned_salinity_data %>%\n  filter(Result_Characteristic == \"Salinity\",\n         year(Activity_StartDate) >= 2010,\n         year(Activity_StartDate) <= 2024) %>%\n  mutate(date = as.Date(Activity_StartDate),\n         year = year(date)) %>%\n  group_by(Location_Identifier, year) %>%\n  summarise(yearly_salinity = mean(Result_Measure, na.rm = TRUE), .groups = \"drop\") %>%\n  mutate(year_date = as.Date(paste0(year, \"-01-01\"))) %>%\n  as_tsibble(index = year_date, key = Location_Identifier)\n\nautoplot(salinity_yearly_ts, yearly_salinity) +\n  facet_wrap(~Location_Identifier, scales = \"free_y\") +\n  labs(title = \"Yearly Salinity Time Series (2010–2024)\",\n       y = \"Mean Salinity\", x = \"Year\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n\nForecasting:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_date <- as.Date(\"2024-12-31\")\n\ncombined_train_df <- salinity_yearly_ts %>%\n  filter(year_date < my_date) %>%\n  index_by(year_date) %>%\n  summarise(yearly_salinity = mean(yearly_salinity, na.rm = TRUE)) %>%\n  as_tibble()\n\nmodel_prophet <- prophet_reg(seasonality_yearly = TRUE) %>%\n  set_engine(\"prophet\")\nfit_prophet <- model_prophet %>% fit(yearly_salinity ~ year_date, data = combined_train_df)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDisabling weekly seasonality. Run prophet with weekly.seasonality=TRUE to override this.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDisabling daily seasonality. Run prophet with daily.seasonality=TRUE to override this.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nn.changepoints greater than number of observations. Using 11\n```\n\n\n:::\n\n```{.r .cell-code}\nfuture <- combined_train_df %>%\n  future_frame(.date_var = year_date, .length_out = 5)\n\nfitted_models <- modeltime_table(fit_prophet)\nforecasts <- fitted_models %>%\n  modeltime_forecast(new_data = future, actual_data = combined_train_df)\n\nggplot(forecasts, aes(x = .index, y = .value, color = .model_desc)) +\n  geom_line(size = 1) +\n  labs(title = \"Five Year Forecast for Average Freshwater Salinity in Florida\",\n       x = \"Date\", y = \"Predicted Salinity\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n\nVisualization:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsalinity_yearly <- cleaned_salinity_data %>%\n  filter(Result_Characteristic == \"Salinity\",\n         year(Activity_StartDate) >= 2010,\n         year(Activity_StartDate) <= 2024) %>%\n  mutate(year = year(Activity_StartDate)) %>%\n  group_by(Location_Identifier, year) %>%\n  summarise(value = mean(Result_Measure, na.rm = TRUE), .groups = \"drop\") %>%\n  mutate(Type = \"Salinity\")\n\nslr_clean <- SLR_data %>%\n  filter(Year >= 2010 & Year <= 2024) %>%\n  mutate(date = as.Date(paste(Year, Month, \"01\", sep = \"-\"))) %>%\n  select(date, Monthly_MSL)\n\nslr_yearly <- slr_clean %>%\n  mutate(year = year(date)) %>%\n  filter(year >= 2010 & year <= 2024) %>%\n  group_by(year) %>%\n  summarise(value = mean(Monthly_MSL, na.rm = TRUE), .groups = \"drop\") %>%\n  mutate(Type = \"SLR\",\n         Location_Identifier = \"SLR_gauge\") \n\ncombined_yearly <- bind_rows(salinity_yearly, slr_yearly)\n\nggplot(combined_yearly, aes(x = year, y = value, color = Location_Identifier)) +\n  geom_point(size = 2) +  # scatter points\n  geom_smooth(method = \"loess\", se = FALSE, size = 1, linetype = \"solid\") +  # smoothed curve\n  geom_smooth(method = \"lm\", se = FALSE, size = 1, linetype = \"dashed\") +  # linear trend line\n  facet_wrap(~Location_Identifier, scales = \"free_y\") +\n  labs(\n    title = \"Yearly Averages of Salinity and Sea Level Rise (2010–2024)\",\n    x = \"Year\",\n    y = \"Value (SLR = m, salinity = ppth)\",\n    color = \"Gauge\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\") \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n\nSpearman Correlation Test:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nslr_clean <- SLR_data %>%\n  filter(Year >= 2010 & Year <= 2024) %>%\n  mutate(date = as.Date(paste(Year, Month, \"01\", sep = \"-\"))) %>%\n  select(date, Monthly_MSL)\n\nsalinity_filtered <- cleaned_salinity_data %>%\n  filter(Result_Characteristic == \"Salinity\",\n         year(Activity_StartDate) >= 2010,\n         year(Activity_StartDate) <= 2024) %>%\n  mutate(date = as.Date(Activity_StartDate)) %>%\n  group_by(Location_Identifier, year = year(date), month = month(date)) %>%\n  summarise(mean_salinity = mean(Result_Measure, na.rm = TRUE), .groups = \"drop\") %>%\n  mutate(date = as.Date(paste(year, month, \"01\", sep = \"-\")))\n\ncor_results <- salinity_filtered %>%\n  split(.$Location_Identifier) %>%\n  map(~{\n    merged <- inner_join(.x, slr_clean, by = \"date\")\n    test <- cor.test(merged$mean_salinity, merged$Monthly_MSL, method = \"spearman\")\n    tibble(\n      gauge = unique(.x$Location_Identifier),\n      estimate = test$estimate,\n      p_value = test$p.value\n    )\n  }) %>%\n  bind_rows()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in cor.test.default(merged$mean_salinity, merged$Monthly_MSL, method =\n\"spearman\"): Cannot compute exact p-value with ties\nWarning in cor.test.default(merged$mean_salinity, merged$Monthly_MSL, method =\n\"spearman\"): Cannot compute exact p-value with ties\nWarning in cor.test.default(merged$mean_salinity, merged$Monthly_MSL, method =\n\"spearman\"): Cannot compute exact p-value with ties\nWarning in cor.test.default(merged$mean_salinity, merged$Monthly_MSL, method =\n\"spearman\"): Cannot compute exact p-value with ties\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(cor_results)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n  gauge                estimate p_value\n  <chr>                   <dbl>   <dbl>\n1 USGS-251032080473400  -0.0788   0.463\n2 USGS-251115081075800  -0.0896   0.558\n3 USGS-251152080370900   0.0613   0.596\n4 USGS-251241080385301   0.153    0.191\n```\n\n\n:::\n:::\n\n\n\n\n\n# 6. Results:\nWith gauge USGS-251032080473400, salinity fluctuated over time, with there being several peaks between 2012 and 2018. There is then a downward trend from 2019 to 2024. Gauge location USGS-251115081075800 shows salinity rises throughout 2011 to 2017 where it significantly decreases in mean salinity. Gauge location USGS-251152080370900 shows a significant peak in salinity in 2015 and then begins to fluctuate between the mean of 20 ppth through 10. Gauge location USGS-251241080385301 salinity was low in 2013 then stabilized after 2016 for a period of about 4 years. Yet by 2020 the salinity significantly decreased and is now rising back to a mean of 28 as of 2024. Overall, salinity in Florida seems to fluctuate heavily over time, with two of the gauges analyzed observing a gradual increase in recent years.\nA five year salinity forecast was generated in Rstudio for Florida freshwater systems by aggregating data from all chosen gauges. Historical salinity data from 2010 to 2024 is shown in red. The model generated forecast from 2025 to 2029 is shown in blue. The actual salinity data for all gauges (red) fluctuated around 23 to 33 ppth for majority of the 14 years, hitting a low of about 18 in 2024. The forecasted salinity levels (blue) are predicted to be relatively stable over the 5 year period (around 22 ppth), indicating no extreme changes in salinity should occur within the next 5 years in Florida. \nThe results of the scatter plot visualization show there is no clear relationship between Sea Level Rise (SLR) trends and any of the salinity time series for the four gauges. The SLR gauge displays a steady upward trend. Yet the remaining salinity gauges show varied patterns and fluctuating salinity trends. The faceted scatterplot was created to visualize yearly average values for SLR and salinity across four USGS monitoring stations in Florida from 2010 to 2024. The dots represent observed annual values from the original dataset. The solid lines show the yearly observations. The dashed lines represent linear trend lines fitted to the data. Thus, as SLR continuously increases, salinity levels may increase, decrease, or remain relatively stable across time, varying with each gauge.\nAccording to the spearman correlation tests, none of the gauges showed a statistically significant correlation with sea level rise (all the p-values > 0.05). These results suggest there is no significant relationship between sea level rise and the selected Florida USGS water gauge salinity measurements.\n\n# 7. Discussion:\nThe obtained results in this project show that, despite the constant increase in sea level registered in stations like Vaca Key between 2010 and 2024, no statistically relevant relationship between this increase and levels of salinity on freshwater monitored in Florida was shown. This lack of significant correlation, evidenced by the p values above 0.05 in all of the tests of Spearman correlation, suggests that that increase in sea level hasn’t had a uniform or direct impact on the salinity of the freshwater during the study period. \nThe observed variability in the salinity data between different stations could be influenced by multiple factors other than sea level rise. These factors may include local hydrogeological conditions, land use, precipitation trend changes, human activity like pumping of aquifers or wastewater management, as well as proximity to urbanized or industrial areas.\nAdditionally, although the time series model showed fluctuations in the salinity with certain upward and downward trends between stations, the forecast made with the Prophet model indicates that the salinity levels will be maintained relatively stable in the near future. This prediction reinforces the idea that other elements could be cushioning or masking the effect of sea level rise over the quality of fresh water.\nUsing a single sea level gauge and comparing it to nearby water quality stations was a practical strategy for this exploratory analysis. However, future research could benefit from a multivariate approach that incorporates other environmental and socio economic factors in order to better understand the dynamic between sea level rise and water quality. \nFinally, even though there wasn’t a direct relation between sea level rise and salinity in this data sample, the continued monitoring of both parameters is still crucial. As climate change progresses, the cumulative effects could manifest more clearly in the long term, which highlights the importance of expanding the spatial and temporal coverage of these studies in Florida and other vulnerable coastal regions.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}